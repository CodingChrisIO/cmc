// Copyright (c) 2021 Fraunhofer AISEC
// Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package attestationreport

import (
	"encoding/hex"
	"fmt"
	"testing"
)

var (
	aisecTDXQuote = []byte{
		0x04, 0x00, 0x02, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x93, 0x9a, 0x72, 0x33, 0xf7, 0x9c, 0x4c, 0xa9, 0x94, 0x0a, 0x0d, 0xb3,
		0x95, 0x7f, 0x06, 0x07, 0x72, 0xc9, 0xdf, 0x27, 0x32, 0x1a, 0x0f, 0xd3,
		0xa2, 0x91, 0xf0, 0x15, 0x06, 0x7e, 0x27, 0x5d, 0x00, 0x00, 0x00, 0x00,
		0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x2f, 0xd2, 0x79, 0xc1, 0x61, 0x64, 0xa9, 0x3d,
		0xd5, 0xbf, 0x37, 0x3d, 0x83, 0x43, 0x28, 0xd4, 0x60, 0x08, 0xc2, 0xb6,
		0x93, 0xaf, 0x9e, 0xbb, 0x86, 0x5b, 0x08, 0xb2, 0xce, 0xd3, 0x20, 0xc9,
		0xa8, 0x9b, 0x48, 0x69, 0xa9, 0xfa, 0xb6, 0x0f, 0xbe, 0x9d, 0x0c, 0x5a,
		0x53, 0x63, 0xc6, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x02, 0x06, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x14, 0x5f, 0xe2, 0x8d, 0xab, 0x35, 0x6d, 0x75,
		0x76, 0x7a, 0xb5, 0x6a, 0xe8, 0x3b, 0xc5, 0x9a, 0xc0, 0x45, 0xdc, 0x54,
		0x8b, 0xf4, 0x0a, 0x3f, 0xb1, 0x13, 0x90, 0x44, 0x6a, 0xf1, 0x9f, 0x6e,
		0xe2, 0x1b, 0x0b, 0x88, 0x74, 0xc9, 0xa7, 0x86, 0x4c, 0xed, 0xb6, 0x4c,
		0x65, 0x73, 0xd9, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xe1, 0xaf, 0x75, 0xe6, 0x19, 0x27, 0x41, 0x0e,
		0x42, 0xb5, 0x4b, 0x39, 0xf6, 0x68, 0x1c, 0xf9, 0xb0, 0xbf, 0xba, 0xe5,
		0x12, 0xb1, 0x5e, 0x87, 0x0e, 0x4c, 0x8d, 0x9d, 0x5a, 0x5c, 0xb3, 0x85,
		0x57, 0x1b, 0x0e, 0x1d, 0xc2, 0xf7, 0x0b, 0xf9, 0xcc, 0xef, 0x08, 0x56,
		0x0f, 0x0a, 0x2b, 0x58, 0x01, 0x1c, 0xb9, 0xfd, 0xd5, 0x14, 0xb4, 0x47,
		0x96, 0x02, 0x39, 0xce, 0x77, 0xa0, 0xff, 0xc8, 0x07, 0x87, 0x77, 0x37,
		0x1f, 0x7e, 0xbf, 0xeb, 0x4c, 0xa0, 0x48, 0x0d, 0x03, 0x3c, 0xe5, 0xec,
		0x61, 0x43, 0x48, 0x06, 0x49, 0xf7, 0x5a, 0x90, 0x57, 0x9d, 0xf5, 0xf5,
		0x01, 0x6b, 0xe7, 0xca, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x32, 0x4e, 0x81, 0xd1, 0xe3, 0xd7, 0x1e, 0x9f,
		0x77, 0xc9, 0xe1, 0xaa, 0xfc, 0xbd, 0xf1, 0x57, 0xaa, 0x53, 0x2d, 0x05,
		0x9c, 0x36, 0x37, 0xda, 0x19, 0xbd, 0x28, 0xf7, 0x0e, 0x65, 0x45, 0x40,
		0xb3, 0xc7, 0x11, 0x96, 0x9e, 0x30, 0x35, 0x15, 0xf9, 0x16, 0xbf, 0xf5,
		0xd4, 0xb0, 0x4c, 0x7e, 0x03, 0x7a, 0x84, 0xa0, 0xb0, 0xbb, 0x7a, 0xc9,
		0x78, 0xa3, 0xc0, 0x86, 0x08, 0x06, 0xc6, 0xbb, 0xd0, 0x10, 0x00, 0x00,
		0xe8, 0xab, 0x3f, 0x41, 0xa5, 0x6f, 0x17, 0x6e, 0x2b, 0x38, 0xac, 0x9d,
		0xf5, 0x04, 0x3e, 0xc3, 0xb8, 0x69, 0x05, 0xb5, 0x1c, 0x1f, 0x01, 0x24,
		0x3c, 0x6a, 0xa1, 0x75, 0xd4, 0x68, 0xdc, 0x93, 0xe7, 0x30, 0x84, 0x08,
		0x29, 0xf1, 0x29, 0xc8, 0xf1, 0xbd, 0x94, 0x71, 0x34, 0xf1, 0x9d, 0xb0,
		0x9a, 0x9a, 0x1a, 0x84, 0x63, 0xa3, 0x9e, 0xc8, 0x85, 0xe7, 0x46, 0xd5,
		0xf9, 0x36, 0x9f, 0x4d, 0xea, 0x98, 0xc4, 0xf0, 0x06, 0x51, 0xc2, 0x30,
		0x02, 0x08, 0xf6, 0x3f, 0x62, 0x30, 0x2a, 0x2e, 0x32, 0xa3, 0xb4, 0xd2,
		0xab, 0x8f, 0x8c, 0xaf, 0xe7, 0x31, 0x19, 0x6f, 0xbe, 0x63, 0x33, 0x89,
		0x67, 0x12, 0x39, 0x3b, 0xf7, 0x15, 0x4d, 0x0a, 0xa8, 0x55, 0x50, 0x26,
		0x19, 0x1c, 0x29, 0xcc, 0x44, 0x2a, 0xa7, 0x5e, 0xd9, 0xcf, 0xcc, 0x68,
		0x35, 0xbf, 0x64, 0x9a, 0x0f, 0x99, 0x66, 0xe5, 0x06, 0x00, 0x4a, 0x10,
		0x00, 0x00, 0x05, 0x05, 0x0f, 0x11, 0x03, 0xff, 0x00, 0x03, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x3e, 0x29, 0x8f, 0x3b, 0x7c,
		0xde, 0x28, 0xb0, 0x64, 0x93, 0xd0, 0x6f, 0xb2, 0xad, 0x6f, 0x95, 0x66,
		0xa9, 0x7f, 0xea, 0x6d, 0x3d, 0xe6, 0x62, 0x36, 0xb2, 0xaf, 0x1a, 0x35,
		0x15, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x9e,
		0x2a, 0x7c, 0x6f, 0x94, 0x8f, 0x17, 0x47, 0x4e, 0x34, 0xa7, 0xfc, 0x43,
		0xed, 0x03, 0x0f, 0x7c, 0x15, 0x63, 0xf1, 0xba, 0xbd, 0xdf, 0x63, 0x40,
		0xc8, 0x2e, 0x0e, 0x54, 0xa8, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x3d,
		0x2a, 0x57, 0x32, 0x92, 0x20, 0x31, 0xf3, 0x16, 0x65, 0x46, 0x0a, 0x6a,
		0x8f, 0xea, 0xeb, 0x2c, 0x88, 0x42, 0x53, 0x0d, 0xfc, 0x78, 0x03, 0x44,
		0x94, 0x25, 0xf4, 0x43, 0x51, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x28, 0xae, 0x7a, 0x12, 0xcc, 0x56, 0x57, 0xae, 0xd6, 0x03,
		0x73, 0xd6, 0x71, 0xe7, 0xb8, 0x61, 0xf6, 0xc0, 0x29, 0x3f, 0xbb, 0xcd,
		0xfe, 0x0c, 0x70, 0x35, 0x6f, 0xc6, 0x5d, 0x98, 0x3c, 0xe7, 0xe6, 0x78,
		0xf2, 0x57, 0x96, 0x54, 0x9c, 0xcc, 0x7d, 0xc3, 0x10, 0x76, 0x4e, 0xa1,
		0xf9, 0x09, 0x13, 0x4f, 0x05, 0xea, 0x72, 0xb8, 0x72, 0xdc, 0x6f, 0x79,
		0x59, 0x23, 0x59, 0xfb, 0xad, 0xe9, 0x20, 0x00, 0x00, 0x01, 0x02, 0x03,
		0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b,
		0x1c, 0x1d, 0x1e, 0x1f, 0x05, 0x00, 0x62, 0x0e, 0x00, 0x00, 0x2d, 0x2d,
		0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52,
		0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d,
		0x2d, 0x0a, 0x4d, 0x49, 0x49, 0x45, 0x38, 0x6a, 0x43, 0x43, 0x42, 0x4a,
		0x65, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x56, 0x41, 0x4a,
		0x76, 0x47, 0x49, 0x36, 0x66, 0x34, 0x50, 0x33, 0x7a, 0x4f, 0x65, 0x44,
		0x53, 0x4a, 0x59, 0x6c, 0x45, 0x73, 0x70, 0x4e, 0x4d, 0x49, 0x63, 0x55,
		0x71, 0x70, 0x4d, 0x41, 0x6f, 0x47, 0x43, 0x43, 0x71, 0x47, 0x53, 0x4d,
		0x34, 0x39, 0x42, 0x41, 0x4d, 0x43, 0x0a, 0x4d, 0x48, 0x41, 0x78, 0x49,
		0x6a, 0x41, 0x67, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x4d, 0x4d, 0x47,
		0x55, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x49, 0x46, 0x4e, 0x48, 0x57,
		0x43, 0x42, 0x51, 0x51, 0x30, 0x73, 0x67, 0x55, 0x47, 0x78, 0x68, 0x64,
		0x47, 0x5a, 0x76, 0x63, 0x6d, 0x30, 0x67, 0x51, 0x30, 0x45, 0x78, 0x47,
		0x6a, 0x41, 0x59, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x6f, 0x4d, 0x0a,
		0x45, 0x55, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x49, 0x45, 0x4e, 0x76,
		0x63, 0x6e, 0x42, 0x76, 0x63, 0x6d, 0x46, 0x30, 0x61, 0x57, 0x39, 0x75,
		0x4d, 0x52, 0x51, 0x77, 0x45, 0x67, 0x59, 0x44, 0x56, 0x51, 0x51, 0x48,
		0x44, 0x41, 0x74, 0x54, 0x59, 0x57, 0x35, 0x30, 0x59, 0x53, 0x42, 0x44,
		0x62, 0x47, 0x46, 0x79, 0x59, 0x54, 0x45, 0x4c, 0x4d, 0x41, 0x6b, 0x47,
		0x41, 0x31, 0x55, 0x45, 0x0a, 0x43, 0x41, 0x77, 0x43, 0x51, 0x30, 0x45,
		0x78, 0x43, 0x7a, 0x41, 0x4a, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x59,
		0x54, 0x41, 0x6c, 0x56, 0x54, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49,
		0x7a, 0x4d, 0x44, 0x59, 0x79, 0x4e, 0x6a, 0x41, 0x34, 0x4e, 0x54, 0x55,
		0x77, 0x4f, 0x56, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x44, 0x59,
		0x79, 0x4e, 0x6a, 0x41, 0x34, 0x4e, 0x54, 0x55, 0x77, 0x0a, 0x4f, 0x56,
		0x6f, 0x77, 0x63, 0x44, 0x45, 0x69, 0x4d, 0x43, 0x41, 0x47, 0x41, 0x31,
		0x55, 0x45, 0x41, 0x77, 0x77, 0x5a, 0x53, 0x57, 0x35, 0x30, 0x5a, 0x57,
		0x77, 0x67, 0x55, 0x30, 0x64, 0x59, 0x49, 0x46, 0x42, 0x44, 0x53, 0x79,
		0x42, 0x44, 0x5a, 0x58, 0x4a, 0x30, 0x61, 0x57, 0x5a, 0x70, 0x59, 0x32,
		0x46, 0x30, 0x5a, 0x54, 0x45, 0x61, 0x4d, 0x42, 0x67, 0x47, 0x41, 0x31,
		0x55, 0x45, 0x0a, 0x43, 0x67, 0x77, 0x52, 0x53, 0x57, 0x35, 0x30, 0x5a,
		0x57, 0x77, 0x67, 0x51, 0x32, 0x39, 0x79, 0x63, 0x47, 0x39, 0x79, 0x59,
		0x58, 0x52, 0x70, 0x62, 0x32, 0x34, 0x78, 0x46, 0x44, 0x41, 0x53, 0x42,
		0x67, 0x4e, 0x56, 0x42, 0x41, 0x63, 0x4d, 0x43, 0x31, 0x4e, 0x68, 0x62,
		0x6e, 0x52, 0x68, 0x49, 0x45, 0x4e, 0x73, 0x59, 0x58, 0x4a, 0x68, 0x4d,
		0x51, 0x73, 0x77, 0x43, 0x51, 0x59, 0x44, 0x0a, 0x56, 0x51, 0x51, 0x49,
		0x44, 0x41, 0x4a, 0x44, 0x51, 0x54, 0x45, 0x4c, 0x4d, 0x41, 0x6b, 0x47,
		0x41, 0x31, 0x55, 0x45, 0x42, 0x68, 0x4d, 0x43, 0x56, 0x56, 0x4d, 0x77,
		0x57, 0x54, 0x41, 0x54, 0x42, 0x67, 0x63, 0x71, 0x68, 0x6b, 0x6a, 0x4f,
		0x50, 0x51, 0x49, 0x42, 0x42, 0x67, 0x67, 0x71, 0x68, 0x6b, 0x6a, 0x4f,
		0x50, 0x51, 0x4d, 0x42, 0x42, 0x77, 0x4e, 0x43, 0x41, 0x41, 0x51, 0x52,
		0x0a, 0x59, 0x52, 0x39, 0x55, 0x73, 0x48, 0x4a, 0x56, 0x6f, 0x72, 0x67,
		0x35, 0x30, 0x48, 0x6d, 0x6e, 0x52, 0x33, 0x5a, 0x35, 0x4e, 0x6e, 0x35,
		0x47, 0x56, 0x71, 0x50, 0x48, 0x51, 0x4d, 0x2b, 0x76, 0x77, 0x73, 0x4c,
		0x45, 0x75, 0x73, 0x65, 0x4d, 0x64, 0x68, 0x42, 0x38, 0x6e, 0x30, 0x63,
		0x6c, 0x77, 0x34, 0x63, 0x64, 0x45, 0x6b, 0x6f, 0x56, 0x46, 0x36, 0x4f,
		0x38, 0x45, 0x68, 0x47, 0x52, 0x0a, 0x37, 0x59, 0x67, 0x6b, 0x72, 0x66,
		0x4e, 0x78, 0x65, 0x61, 0x57, 0x61, 0x4b, 0x44, 0x4a, 0x42, 0x32, 0x62,
		0x48, 0x64, 0x6f, 0x34, 0x49, 0x44, 0x44, 0x44, 0x43, 0x43, 0x41, 0x77,
		0x67, 0x77, 0x48, 0x77, 0x59, 0x44, 0x56, 0x52, 0x30, 0x6a, 0x42, 0x42,
		0x67, 0x77, 0x46, 0x6f, 0x41, 0x55, 0x6c, 0x57, 0x39, 0x64, 0x7a, 0x62,
		0x30, 0x62, 0x34, 0x65, 0x6c, 0x41, 0x53, 0x63, 0x6e, 0x55, 0x0a, 0x39,
		0x44, 0x50, 0x4f, 0x41, 0x56, 0x63, 0x4c, 0x33, 0x6c, 0x51, 0x77, 0x61,
		0x77, 0x59, 0x44, 0x56, 0x52, 0x30, 0x66, 0x42, 0x47, 0x51, 0x77, 0x59,
		0x6a, 0x42, 0x67, 0x6f, 0x46, 0x36, 0x67, 0x58, 0x49, 0x5a, 0x61, 0x61,
		0x48, 0x52, 0x30, 0x63, 0x48, 0x4d, 0x36, 0x4c, 0x79, 0x39, 0x68, 0x63,
		0x47, 0x6b, 0x75, 0x64, 0x48, 0x4a, 0x31, 0x63, 0x33, 0x52, 0x6c, 0x5a,
		0x48, 0x4e, 0x6c, 0x0a, 0x63, 0x6e, 0x5a, 0x70, 0x59, 0x32, 0x56, 0x7a,
		0x4c, 0x6d, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x4c, 0x6d, 0x4e, 0x76,
		0x62, 0x53, 0x39, 0x7a, 0x5a, 0x33, 0x67, 0x76, 0x59, 0x32, 0x56, 0x79,
		0x64, 0x47, 0x6c, 0x6d, 0x61, 0x57, 0x4e, 0x68, 0x64, 0x47, 0x6c, 0x76,
		0x62, 0x69, 0x39, 0x32, 0x4e, 0x43, 0x39, 0x77, 0x59, 0x32, 0x74, 0x6a,
		0x63, 0x6d, 0x77, 0x2f, 0x59, 0x32, 0x45, 0x39, 0x0a, 0x63, 0x47, 0x78,
		0x68, 0x64, 0x47, 0x5a, 0x76, 0x63, 0x6d, 0x30, 0x6d, 0x5a, 0x57, 0x35,
		0x6a, 0x62, 0x32, 0x52, 0x70, 0x62, 0x6d, 0x63, 0x39, 0x5a, 0x47, 0x56,
		0x79, 0x4d, 0x42, 0x30, 0x47, 0x41, 0x31, 0x55, 0x64, 0x44, 0x67, 0x51,
		0x57, 0x42, 0x42, 0x51, 0x73, 0x6b, 0x6a, 0x54, 0x5a, 0x65, 0x48, 0x6a,
		0x34, 0x77, 0x55, 0x49, 0x57, 0x79, 0x61, 0x61, 0x71, 0x4f, 0x5a, 0x49,
		0x55, 0x0a, 0x70, 0x43, 0x55, 0x63, 0x62, 0x54, 0x41, 0x4f, 0x42, 0x67,
		0x4e, 0x56, 0x48, 0x51, 0x38, 0x42, 0x41, 0x66, 0x38, 0x45, 0x42, 0x41,
		0x4d, 0x43, 0x42, 0x73, 0x41, 0x77, 0x44, 0x41, 0x59, 0x44, 0x56, 0x52,
		0x30, 0x54, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x49, 0x77, 0x41, 0x44,
		0x43, 0x43, 0x41, 0x6a, 0x6b, 0x47, 0x43, 0x53, 0x71, 0x47, 0x53, 0x49,
		0x62, 0x34, 0x54, 0x51, 0x45, 0x4e, 0x0a, 0x41, 0x51, 0x53, 0x43, 0x41,
		0x69, 0x6f, 0x77, 0x67, 0x67, 0x49, 0x6d, 0x4d, 0x42, 0x34, 0x47, 0x43,
		0x69, 0x71, 0x47, 0x53, 0x49, 0x62, 0x34, 0x54, 0x51, 0x45, 0x4e, 0x41,
		0x51, 0x45, 0x45, 0x45, 0x4e, 0x63, 0x59, 0x70, 0x49, 0x71, 0x50, 0x41,
		0x30, 0x4e, 0x70, 0x39, 0x5a, 0x4f, 0x64, 0x42, 0x4f, 0x4b, 0x77, 0x33,
		0x46, 0x34, 0x77, 0x67, 0x67, 0x46, 0x6a, 0x42, 0x67, 0x6f, 0x71, 0x0a,
		0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45, 0x43,
		0x4d, 0x49, 0x49, 0x42, 0x55, 0x7a, 0x41, 0x51, 0x42, 0x67, 0x73, 0x71,
		0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45, 0x43,
		0x41, 0x51, 0x49, 0x42, 0x42, 0x54, 0x41, 0x51, 0x42, 0x67, 0x73, 0x71,
		0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45, 0x43,
		0x41, 0x67, 0x49, 0x42, 0x0a, 0x42, 0x54, 0x41, 0x51, 0x42, 0x67, 0x73,
		0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45,
		0x43, 0x41, 0x77, 0x49, 0x42, 0x41, 0x6a, 0x41, 0x51, 0x42, 0x67, 0x73,
		0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45,
		0x43, 0x42, 0x41, 0x49, 0x42, 0x41, 0x6a, 0x41, 0x51, 0x42, 0x67, 0x73,
		0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x0a, 0x44, 0x51,
		0x45, 0x43, 0x42, 0x51, 0x49, 0x42, 0x41, 0x7a, 0x41, 0x51, 0x42, 0x67,
		0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51,
		0x45, 0x43, 0x42, 0x67, 0x49, 0x42, 0x41, 0x54, 0x41, 0x51, 0x42, 0x67,
		0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51,
		0x45, 0x43, 0x42, 0x77, 0x49, 0x42, 0x41, 0x44, 0x41, 0x51, 0x42, 0x67,
		0x73, 0x71, 0x0a, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44,
		0x51, 0x45, 0x43, 0x43, 0x41, 0x49, 0x42, 0x41, 0x7a, 0x41, 0x51, 0x42,
		0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44,
		0x51, 0x45, 0x43, 0x43, 0x51, 0x49, 0x42, 0x41, 0x44, 0x41, 0x51, 0x42,
		0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44,
		0x51, 0x45, 0x43, 0x43, 0x67, 0x49, 0x42, 0x0a, 0x41, 0x44, 0x41, 0x51,
		0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42,
		0x44, 0x51, 0x45, 0x43, 0x43, 0x77, 0x49, 0x42, 0x41, 0x44, 0x41, 0x51,
		0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42,
		0x44, 0x51, 0x45, 0x43, 0x44, 0x41, 0x49, 0x42, 0x41, 0x44, 0x41, 0x51,
		0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42,
		0x0a, 0x44, 0x51, 0x45, 0x43, 0x44, 0x51, 0x49, 0x42, 0x41, 0x44, 0x41,
		0x51, 0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30,
		0x42, 0x44, 0x51, 0x45, 0x43, 0x44, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41,
		0x51, 0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30,
		0x42, 0x44, 0x51, 0x45, 0x43, 0x44, 0x77, 0x49, 0x42, 0x41, 0x44, 0x41,
		0x51, 0x42, 0x67, 0x73, 0x71, 0x0a, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45,
		0x30, 0x42, 0x44, 0x51, 0x45, 0x43, 0x45, 0x41, 0x49, 0x42, 0x41, 0x44,
		0x41, 0x51, 0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45,
		0x30, 0x42, 0x44, 0x51, 0x45, 0x43, 0x45, 0x51, 0x49, 0x42, 0x43, 0x7a,
		0x41, 0x66, 0x42, 0x67, 0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45,
		0x30, 0x42, 0x44, 0x51, 0x45, 0x43, 0x45, 0x67, 0x51, 0x51, 0x0a, 0x42,
		0x51, 0x55, 0x43, 0x41, 0x67, 0x4d, 0x42, 0x41, 0x41, 0x4d, 0x41, 0x41,
		0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x44, 0x41, 0x51, 0x42,
		0x67, 0x6f, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44,
		0x51, 0x45, 0x44, 0x42, 0x41, 0x49, 0x41, 0x41, 0x44, 0x41, 0x55, 0x42,
		0x67, 0x6f, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44,
		0x51, 0x45, 0x45, 0x0a, 0x42, 0x41, 0x59, 0x41, 0x67, 0x47, 0x38, 0x46,
		0x41, 0x41, 0x41, 0x77, 0x44, 0x77, 0x59, 0x4b, 0x4b, 0x6f, 0x5a, 0x49,
		0x68, 0x76, 0x68, 0x4e, 0x41, 0x51, 0x30, 0x42, 0x42, 0x51, 0x6f, 0x42,
		0x41, 0x54, 0x41, 0x65, 0x42, 0x67, 0x6f, 0x71, 0x68, 0x6b, 0x69, 0x47,
		0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45, 0x47, 0x42, 0x42, 0x41, 0x68,
		0x64, 0x62, 0x6e, 0x34, 0x42, 0x63, 0x75, 0x2f, 0x0a, 0x41, 0x54, 0x33,
		0x71, 0x34, 0x57, 0x45, 0x73, 0x6d, 0x6b, 0x55, 0x64, 0x4d, 0x45, 0x51,
		0x47, 0x43, 0x69, 0x71, 0x47, 0x53, 0x49, 0x62, 0x34, 0x54, 0x51, 0x45,
		0x4e, 0x41, 0x51, 0x63, 0x77, 0x4e, 0x6a, 0x41, 0x51, 0x42, 0x67, 0x73,
		0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51, 0x45,
		0x48, 0x41, 0x51, 0x45, 0x42, 0x2f, 0x7a, 0x41, 0x51, 0x42, 0x67, 0x73,
		0x71, 0x0a, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51,
		0x45, 0x48, 0x41, 0x67, 0x45, 0x42, 0x41, 0x44, 0x41, 0x51, 0x42, 0x67,
		0x73, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x2b, 0x45, 0x30, 0x42, 0x44, 0x51,
		0x45, 0x48, 0x41, 0x77, 0x45, 0x42, 0x2f, 0x7a, 0x41, 0x4b, 0x42, 0x67,
		0x67, 0x71, 0x68, 0x6b, 0x6a, 0x4f, 0x50, 0x51, 0x51, 0x44, 0x41, 0x67,
		0x4e, 0x4a, 0x41, 0x44, 0x42, 0x47, 0x0a, 0x41, 0x69, 0x45, 0x41, 0x75,
		0x33, 0x53, 0x56, 0x34, 0x53, 0x42, 0x4a, 0x59, 0x2b, 0x59, 0x34, 0x4d,
		0x43, 0x70, 0x39, 0x58, 0x6f, 0x75, 0x5a, 0x6a, 0x64, 0x54, 0x5a, 0x53,
		0x39, 0x4f, 0x35, 0x31, 0x49, 0x51, 0x34, 0x4d, 0x71, 0x32, 0x33, 0x77,
		0x67, 0x32, 0x63, 0x33, 0x34, 0x59, 0x43, 0x49, 0x51, 0x44, 0x6d, 0x46,
		0x79, 0x37, 0x63, 0x41, 0x67, 0x2b, 0x7a, 0x78, 0x75, 0x78, 0x53, 0x0a,
		0x63, 0x36, 0x41, 0x5a, 0x2b, 0x54, 0x4e, 0x2f, 0x4e, 0x67, 0x76, 0x48,
		0x56, 0x72, 0x74, 0x42, 0x42, 0x6d, 0x71, 0x56, 0x7a, 0x30, 0x73, 0x73,
		0x55, 0x4d, 0x4c, 0x36, 0x2b, 0x67, 0x3d, 0x3d, 0x0a, 0x2d, 0x2d, 0x2d,
		0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46,
		0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x2d,
		0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45,
		0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d,
		0x2d, 0x2d, 0x0a, 0x4d, 0x49, 0x49, 0x43, 0x6c, 0x6a, 0x43, 0x43, 0x41,
		0x6a, 0x32, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x56, 0x41,
		0x4a, 0x56, 0x76, 0x58, 0x63, 0x32, 0x39, 0x47, 0x2b, 0x48, 0x70, 0x51,
		0x45, 0x6e, 0x4a, 0x31, 0x50, 0x51, 0x7a, 0x7a, 0x67, 0x46, 0x58, 0x43,
		0x39, 0x35, 0x55, 0x4d, 0x41, 0x6f, 0x47, 0x43, 0x43, 0x71, 0x47, 0x53,
		0x4d, 0x34, 0x39, 0x42, 0x41, 0x4d, 0x43, 0x0a, 0x4d, 0x47, 0x67, 0x78,
		0x47, 0x6a, 0x41, 0x59, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x4d, 0x4d,
		0x45, 0x55, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x49, 0x46, 0x4e, 0x48,
		0x57, 0x43, 0x42, 0x53, 0x62, 0x32, 0x39, 0x30, 0x49, 0x45, 0x4e, 0x42,
		0x4d, 0x52, 0x6f, 0x77, 0x47, 0x41, 0x59, 0x44, 0x56, 0x51, 0x51, 0x4b,
		0x44, 0x42, 0x46, 0x4a, 0x62, 0x6e, 0x52, 0x6c, 0x62, 0x43, 0x42, 0x44,
		0x0a, 0x62, 0x33, 0x4a, 0x77, 0x62, 0x33, 0x4a, 0x68, 0x64, 0x47, 0x6c,
		0x76, 0x62, 0x6a, 0x45, 0x55, 0x4d, 0x42, 0x49, 0x47, 0x41, 0x31, 0x55,
		0x45, 0x42, 0x77, 0x77, 0x4c, 0x55, 0x32, 0x46, 0x75, 0x64, 0x47, 0x45,
		0x67, 0x51, 0x32, 0x78, 0x68, 0x63, 0x6d, 0x45, 0x78, 0x43, 0x7a, 0x41,
		0x4a, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x67, 0x4d, 0x41, 0x6b, 0x4e,
		0x42, 0x4d, 0x51, 0x73, 0x77, 0x0a, 0x43, 0x51, 0x59, 0x44, 0x56, 0x51,
		0x51, 0x47, 0x45, 0x77, 0x4a, 0x56, 0x55, 0x7a, 0x41, 0x65, 0x46, 0x77,
		0x30, 0x78, 0x4f, 0x44, 0x41, 0x31, 0x4d, 0x6a, 0x45, 0x78, 0x4d, 0x44,
		0x55, 0x77, 0x4d, 0x54, 0x42, 0x61, 0x46, 0x77, 0x30, 0x7a, 0x4d, 0x7a,
		0x41, 0x31, 0x4d, 0x6a, 0x45, 0x78, 0x4d, 0x44, 0x55, 0x77, 0x4d, 0x54,
		0x42, 0x61, 0x4d, 0x48, 0x41, 0x78, 0x49, 0x6a, 0x41, 0x67, 0x0a, 0x42,
		0x67, 0x4e, 0x56, 0x42, 0x41, 0x4d, 0x4d, 0x47, 0x55, 0x6c, 0x75, 0x64,
		0x47, 0x56, 0x73, 0x49, 0x46, 0x4e, 0x48, 0x57, 0x43, 0x42, 0x51, 0x51,
		0x30, 0x73, 0x67, 0x55, 0x47, 0x78, 0x68, 0x64, 0x47, 0x5a, 0x76, 0x63,
		0x6d, 0x30, 0x67, 0x51, 0x30, 0x45, 0x78, 0x47, 0x6a, 0x41, 0x59, 0x42,
		0x67, 0x4e, 0x56, 0x42, 0x41, 0x6f, 0x4d, 0x45, 0x55, 0x6c, 0x75, 0x64,
		0x47, 0x56, 0x73, 0x0a, 0x49, 0x45, 0x4e, 0x76, 0x63, 0x6e, 0x42, 0x76,
		0x63, 0x6d, 0x46, 0x30, 0x61, 0x57, 0x39, 0x75, 0x4d, 0x52, 0x51, 0x77,
		0x45, 0x67, 0x59, 0x44, 0x56, 0x51, 0x51, 0x48, 0x44, 0x41, 0x74, 0x54,
		0x59, 0x57, 0x35, 0x30, 0x59, 0x53, 0x42, 0x44, 0x62, 0x47, 0x46, 0x79,
		0x59, 0x54, 0x45, 0x4c, 0x4d, 0x41, 0x6b, 0x47, 0x41, 0x31, 0x55, 0x45,
		0x43, 0x41, 0x77, 0x43, 0x51, 0x30, 0x45, 0x78, 0x0a, 0x43, 0x7a, 0x41,
		0x4a, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x59, 0x54, 0x41, 0x6c, 0x56,
		0x54, 0x4d, 0x46, 0x6b, 0x77, 0x45, 0x77, 0x59, 0x48, 0x4b, 0x6f, 0x5a,
		0x49, 0x7a, 0x6a, 0x30, 0x43, 0x41, 0x51, 0x59, 0x49, 0x4b, 0x6f, 0x5a,
		0x49, 0x7a, 0x6a, 0x30, 0x44, 0x41, 0x51, 0x63, 0x44, 0x51, 0x67, 0x41,
		0x45, 0x4e, 0x53, 0x42, 0x2f, 0x37, 0x74, 0x32, 0x31, 0x6c, 0x58, 0x53,
		0x4f, 0x0a, 0x32, 0x43, 0x75, 0x7a, 0x70, 0x78, 0x77, 0x37, 0x34, 0x65,
		0x4a, 0x42, 0x37, 0x32, 0x45, 0x79, 0x44, 0x47, 0x67, 0x57, 0x35, 0x72,
		0x58, 0x43, 0x74, 0x78, 0x32, 0x74, 0x56, 0x54, 0x4c, 0x71, 0x36, 0x68,
		0x4b, 0x6b, 0x36, 0x7a, 0x2b, 0x55, 0x69, 0x52, 0x5a, 0x43, 0x6e, 0x71,
		0x52, 0x37, 0x70, 0x73, 0x4f, 0x76, 0x67, 0x71, 0x46, 0x65, 0x53, 0x78,
		0x6c, 0x6d, 0x54, 0x6c, 0x4a, 0x6c, 0x0a, 0x65, 0x54, 0x6d, 0x69, 0x32,
		0x57, 0x59, 0x7a, 0x33, 0x71, 0x4f, 0x42, 0x75, 0x7a, 0x43, 0x42, 0x75,
		0x44, 0x41, 0x66, 0x42, 0x67, 0x4e, 0x56, 0x48, 0x53, 0x4d, 0x45, 0x47,
		0x44, 0x41, 0x57, 0x67, 0x42, 0x51, 0x69, 0x5a, 0x51, 0x7a, 0x57, 0x57,
		0x70, 0x30, 0x30, 0x69, 0x66, 0x4f, 0x44, 0x74, 0x4a, 0x56, 0x53, 0x76,
		0x31, 0x41, 0x62, 0x4f, 0x53, 0x63, 0x47, 0x72, 0x44, 0x42, 0x53, 0x0a,
		0x42, 0x67, 0x4e, 0x56, 0x48, 0x52, 0x38, 0x45, 0x53, 0x7a, 0x42, 0x4a,
		0x4d, 0x45, 0x65, 0x67, 0x52, 0x61, 0x42, 0x44, 0x68, 0x6b, 0x46, 0x6f,
		0x64, 0x48, 0x52, 0x77, 0x63, 0x7a, 0x6f, 0x76, 0x4c, 0x32, 0x4e, 0x6c,
		0x63, 0x6e, 0x52, 0x70, 0x5a, 0x6d, 0x6c, 0x6a, 0x59, 0x58, 0x52, 0x6c,
		0x63, 0x79, 0x35, 0x30, 0x63, 0x6e, 0x56, 0x7a, 0x64, 0x47, 0x56, 0x6b,
		0x63, 0x32, 0x56, 0x79, 0x0a, 0x64, 0x6d, 0x6c, 0x6a, 0x5a, 0x58, 0x4d,
		0x75, 0x61, 0x57, 0x35, 0x30, 0x5a, 0x57, 0x77, 0x75, 0x59, 0x32, 0x39,
		0x74, 0x4c, 0x30, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x55, 0x30, 0x64,
		0x59, 0x55, 0x6d, 0x39, 0x76, 0x64, 0x45, 0x4e, 0x42, 0x4c, 0x6d, 0x52,
		0x6c, 0x63, 0x6a, 0x41, 0x64, 0x42, 0x67, 0x4e, 0x56, 0x48, 0x51, 0x34,
		0x45, 0x46, 0x67, 0x51, 0x55, 0x6c, 0x57, 0x39, 0x64, 0x0a, 0x7a, 0x62,
		0x30, 0x62, 0x34, 0x65, 0x6c, 0x41, 0x53, 0x63, 0x6e, 0x55, 0x39, 0x44,
		0x50, 0x4f, 0x41, 0x56, 0x63, 0x4c, 0x33, 0x6c, 0x51, 0x77, 0x44, 0x67,
		0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41,
		0x51, 0x44, 0x41, 0x67, 0x45, 0x47, 0x4d, 0x42, 0x49, 0x47, 0x41, 0x31,
		0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0x2f, 0x77, 0x51, 0x49, 0x4d, 0x41,
		0x59, 0x42, 0x0a, 0x41, 0x66, 0x38, 0x43, 0x41, 0x51, 0x41, 0x77, 0x43,
		0x67, 0x59, 0x49, 0x4b, 0x6f, 0x5a, 0x49, 0x7a, 0x6a, 0x30, 0x45, 0x41,
		0x77, 0x49, 0x44, 0x52, 0x77, 0x41, 0x77, 0x52, 0x41, 0x49, 0x67, 0x58,
		0x73, 0x56, 0x6b, 0x69, 0x30, 0x77, 0x2b, 0x69, 0x36, 0x56, 0x59, 0x47,
		0x57, 0x33, 0x55, 0x46, 0x2f, 0x32, 0x32, 0x75, 0x61, 0x58, 0x65, 0x30,
		0x59, 0x4a, 0x44, 0x6a, 0x31, 0x55, 0x65, 0x0a, 0x6e, 0x41, 0x2b, 0x54,
		0x6a, 0x44, 0x31, 0x61, 0x69, 0x35, 0x63, 0x43, 0x49, 0x43, 0x59, 0x62,
		0x31, 0x53, 0x41, 0x6d, 0x44, 0x35, 0x78, 0x6b, 0x66, 0x54, 0x56, 0x70,
		0x76, 0x6f, 0x34, 0x55, 0x6f, 0x79, 0x69, 0x53, 0x59, 0x78, 0x72, 0x44,
		0x57, 0x4c, 0x6d, 0x55, 0x52, 0x34, 0x43, 0x49, 0x39, 0x4e, 0x4b, 0x79,
		0x66, 0x50, 0x4e, 0x2b, 0x0a, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e,
		0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
		0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
		0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46,
		0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x4d,
		0x49, 0x49, 0x43, 0x6a, 0x7a, 0x43, 0x43, 0x41, 0x6a, 0x53, 0x67, 0x41,
		0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x55, 0x49, 0x6d, 0x55, 0x4d, 0x31,
		0x6c, 0x71, 0x64, 0x4e, 0x49, 0x6e, 0x7a, 0x67, 0x37, 0x53, 0x56, 0x55,
		0x72, 0x39, 0x51, 0x47, 0x7a, 0x6b, 0x6e, 0x42, 0x71, 0x77, 0x77, 0x43,
		0x67, 0x59, 0x49, 0x4b, 0x6f, 0x5a, 0x49, 0x7a, 0x6a, 0x30, 0x45, 0x41,
		0x77, 0x49, 0x77, 0x0a, 0x61, 0x44, 0x45, 0x61, 0x4d, 0x42, 0x67, 0x47,
		0x41, 0x31, 0x55, 0x45, 0x41, 0x77, 0x77, 0x52, 0x53, 0x57, 0x35, 0x30,
		0x5a, 0x57, 0x77, 0x67, 0x55, 0x30, 0x64, 0x59, 0x49, 0x46, 0x4a, 0x76,
		0x62, 0x33, 0x51, 0x67, 0x51, 0x30, 0x45, 0x78, 0x47, 0x6a, 0x41, 0x59,
		0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x6f, 0x4d, 0x45, 0x55, 0x6c, 0x75,
		0x64, 0x47, 0x56, 0x73, 0x49, 0x45, 0x4e, 0x76, 0x0a, 0x63, 0x6e, 0x42,
		0x76, 0x63, 0x6d, 0x46, 0x30, 0x61, 0x57, 0x39, 0x75, 0x4d, 0x52, 0x51,
		0x77, 0x45, 0x67, 0x59, 0x44, 0x56, 0x51, 0x51, 0x48, 0x44, 0x41, 0x74,
		0x54, 0x59, 0x57, 0x35, 0x30, 0x59, 0x53, 0x42, 0x44, 0x62, 0x47, 0x46,
		0x79, 0x59, 0x54, 0x45, 0x4c, 0x4d, 0x41, 0x6b, 0x47, 0x41, 0x31, 0x55,
		0x45, 0x43, 0x41, 0x77, 0x43, 0x51, 0x30, 0x45, 0x78, 0x43, 0x7a, 0x41,
		0x4a, 0x0a, 0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x59, 0x54, 0x41, 0x6c,
		0x56, 0x54, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x45, 0x34, 0x4d, 0x44,
		0x55, 0x79, 0x4d, 0x54, 0x45, 0x77, 0x4e, 0x44, 0x55, 0x78, 0x4d, 0x46,
		0x6f, 0x58, 0x44, 0x54, 0x51, 0x35, 0x4d, 0x54, 0x49, 0x7a, 0x4d, 0x54,
		0x49, 0x7a, 0x4e, 0x54, 0x6b, 0x31, 0x4f, 0x56, 0x6f, 0x77, 0x61, 0x44,
		0x45, 0x61, 0x4d, 0x42, 0x67, 0x47, 0x0a, 0x41, 0x31, 0x55, 0x45, 0x41,
		0x77, 0x77, 0x52, 0x53, 0x57, 0x35, 0x30, 0x5a, 0x57, 0x77, 0x67, 0x55,
		0x30, 0x64, 0x59, 0x49, 0x46, 0x4a, 0x76, 0x62, 0x33, 0x51, 0x67, 0x51,
		0x30, 0x45, 0x78, 0x47, 0x6a, 0x41, 0x59, 0x42, 0x67, 0x4e, 0x56, 0x42,
		0x41, 0x6f, 0x4d, 0x45, 0x55, 0x6c, 0x75, 0x64, 0x47, 0x56, 0x73, 0x49,
		0x45, 0x4e, 0x76, 0x63, 0x6e, 0x42, 0x76, 0x63, 0x6d, 0x46, 0x30, 0x0a,
		0x61, 0x57, 0x39, 0x75, 0x4d, 0x52, 0x51, 0x77, 0x45, 0x67, 0x59, 0x44,
		0x56, 0x51, 0x51, 0x48, 0x44, 0x41, 0x74, 0x54, 0x59, 0x57, 0x35, 0x30,
		0x59, 0x53, 0x42, 0x44, 0x62, 0x47, 0x46, 0x79, 0x59, 0x54, 0x45, 0x4c,
		0x4d, 0x41, 0x6b, 0x47, 0x41, 0x31, 0x55, 0x45, 0x43, 0x41, 0x77, 0x43,
		0x51, 0x30, 0x45, 0x78, 0x43, 0x7a, 0x41, 0x4a, 0x42, 0x67, 0x4e, 0x56,
		0x42, 0x41, 0x59, 0x54, 0x0a, 0x41, 0x6c, 0x56, 0x54, 0x4d, 0x46, 0x6b,
		0x77, 0x45, 0x77, 0x59, 0x48, 0x4b, 0x6f, 0x5a, 0x49, 0x7a, 0x6a, 0x30,
		0x43, 0x41, 0x51, 0x59, 0x49, 0x4b, 0x6f, 0x5a, 0x49, 0x7a, 0x6a, 0x30,
		0x44, 0x41, 0x51, 0x63, 0x44, 0x51, 0x67, 0x41, 0x45, 0x43, 0x36, 0x6e,
		0x45, 0x77, 0x4d, 0x44, 0x49, 0x59, 0x5a, 0x4f, 0x6a, 0x2f, 0x69, 0x50,
		0x57, 0x73, 0x43, 0x7a, 0x61, 0x45, 0x4b, 0x69, 0x37, 0x0a, 0x31, 0x4f,
		0x69, 0x4f, 0x53, 0x4c, 0x52, 0x46, 0x68, 0x57, 0x47, 0x6a, 0x62, 0x6e,
		0x42, 0x56, 0x4a, 0x66, 0x56, 0x6e, 0x6b, 0x59, 0x34, 0x75, 0x33, 0x49,
		0x6a, 0x6b, 0x44, 0x59, 0x59, 0x4c, 0x30, 0x4d, 0x78, 0x4f, 0x34, 0x6d,
		0x71, 0x73, 0x79, 0x59, 0x6a, 0x6c, 0x42, 0x61, 0x6c, 0x54, 0x56, 0x59,
		0x78, 0x46, 0x50, 0x32, 0x73, 0x4a, 0x42, 0x4b, 0x35, 0x7a, 0x6c, 0x4b,
		0x4f, 0x42, 0x0a, 0x75, 0x7a, 0x43, 0x42, 0x75, 0x44, 0x41, 0x66, 0x42,
		0x67, 0x4e, 0x56, 0x48, 0x53, 0x4d, 0x45, 0x47, 0x44, 0x41, 0x57, 0x67,
		0x42, 0x51, 0x69, 0x5a, 0x51, 0x7a, 0x57, 0x57, 0x70, 0x30, 0x30, 0x69,
		0x66, 0x4f, 0x44, 0x74, 0x4a, 0x56, 0x53, 0x76, 0x31, 0x41, 0x62, 0x4f,
		0x53, 0x63, 0x47, 0x72, 0x44, 0x42, 0x53, 0x42, 0x67, 0x4e, 0x56, 0x48,
		0x52, 0x38, 0x45, 0x53, 0x7a, 0x42, 0x4a, 0x0a, 0x4d, 0x45, 0x65, 0x67,
		0x52, 0x61, 0x42, 0x44, 0x68, 0x6b, 0x46, 0x6f, 0x64, 0x48, 0x52, 0x77,
		0x63, 0x7a, 0x6f, 0x76, 0x4c, 0x32, 0x4e, 0x6c, 0x63, 0x6e, 0x52, 0x70,
		0x5a, 0x6d, 0x6c, 0x6a, 0x59, 0x58, 0x52, 0x6c, 0x63, 0x79, 0x35, 0x30,
		0x63, 0x6e, 0x56, 0x7a, 0x64, 0x47, 0x56, 0x6b, 0x63, 0x32, 0x56, 0x79,
		0x64, 0x6d, 0x6c, 0x6a, 0x5a, 0x58, 0x4d, 0x75, 0x61, 0x57, 0x35, 0x30,
		0x0a, 0x5a, 0x57, 0x77, 0x75, 0x59, 0x32, 0x39, 0x74, 0x4c, 0x30, 0x6c,
		0x75, 0x64, 0x47, 0x56, 0x73, 0x55, 0x30, 0x64, 0x59, 0x55, 0x6d, 0x39,
		0x76, 0x64, 0x45, 0x4e, 0x42, 0x4c, 0x6d, 0x52, 0x6c, 0x63, 0x6a, 0x41,
		0x64, 0x42, 0x67, 0x4e, 0x56, 0x48, 0x51, 0x34, 0x45, 0x46, 0x67, 0x51,
		0x55, 0x49, 0x6d, 0x55, 0x4d, 0x31, 0x6c, 0x71, 0x64, 0x4e, 0x49, 0x6e,
		0x7a, 0x67, 0x37, 0x53, 0x56, 0x0a, 0x55, 0x72, 0x39, 0x51, 0x47, 0x7a,
		0x6b, 0x6e, 0x42, 0x71, 0x77, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52,
		0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67,
		0x45, 0x47, 0x4d, 0x42, 0x49, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77,
		0x45, 0x42, 0x2f, 0x77, 0x51, 0x49, 0x4d, 0x41, 0x59, 0x42, 0x41, 0x66,
		0x38, 0x43, 0x41, 0x51, 0x45, 0x77, 0x43, 0x67, 0x59, 0x49, 0x0a, 0x4b,
		0x6f, 0x5a, 0x49, 0x7a, 0x6a, 0x30, 0x45, 0x41, 0x77, 0x49, 0x44, 0x53,
		0x51, 0x41, 0x77, 0x52, 0x67, 0x49, 0x68, 0x41, 0x4f, 0x57, 0x2f, 0x35,
		0x51, 0x6b, 0x52, 0x2b, 0x53, 0x39, 0x43, 0x69, 0x53, 0x44, 0x63, 0x4e,
		0x6f, 0x6f, 0x77, 0x4c, 0x75, 0x50, 0x52, 0x4c, 0x73, 0x57, 0x47, 0x66,
		0x2f, 0x59, 0x69, 0x37, 0x47, 0x53, 0x58, 0x39, 0x34, 0x42, 0x67, 0x77,
		0x54, 0x77, 0x67, 0x0a, 0x41, 0x69, 0x45, 0x41, 0x34, 0x4a, 0x30, 0x6c,
		0x72, 0x48, 0x6f, 0x4d, 0x73, 0x2b, 0x58, 0x6f, 0x35, 0x6f, 0x2f, 0x73,
		0x58, 0x36, 0x4f, 0x39, 0x51, 0x57, 0x78, 0x48, 0x52, 0x41, 0x76, 0x5a,
		0x55, 0x47, 0x4f, 0x64, 0x52, 0x51, 0x37, 0x63, 0x76, 0x71, 0x52, 0x58,
		0x61, 0x71, 0x49, 0x3d, 0x0a, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e,
		0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
		0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a, 0x00,
	}

	tcb_signing_cert_tdx = conv([]byte("-----BEGIN CERTIFICATE-----\nMIICizCCAjKgAwIBAgIUfjiC1ftVKUpASY5FhAPpFJG99FUwCgYIKoZIzj0EAwIw\naDEaMBgGA1UEAwwRSW50ZWwgU0dYIFJvb3QgQ0ExGjAYBgNVBAoMEUludGVsIENv\ncnBvcmF0aW9uMRQwEgYDVQQHDAtTYW50YSBDbGFyYTELMAkGA1UECAwCQ0ExCzAJ\nBgNVBAYTAlVTMB4XDTE4MDUyMTEwNTAxMFoXDTI1MDUyMTEwNTAxMFowbDEeMBwG\nA1UEAwwVSW50ZWwgU0dYIFRDQiBTaWduaW5nMRowGAYDVQQKDBFJbnRlbCBDb3Jw\nb3JhdGlvbjEUMBIGA1UEBwwLU2FudGEgQ2xhcmExCzAJBgNVBAgMAkNBMQswCQYD\nVQQGEwJVUzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABENFG8xzydWRfK92bmGv\nP+mAh91PEyV7Jh6FGJd5ndE9aBH7R3E4A7ubrlh/zN3C4xvpoouGlirMba+W2lju\nypajgbUwgbIwHwYDVR0jBBgwFoAUImUM1lqdNInzg7SVUr9QGzknBqwwUgYDVR0f\nBEswSTBHoEWgQ4ZBaHR0cHM6Ly9jZXJ0aWZpY2F0ZXMudHJ1c3RlZHNlcnZpY2Vz\nLmludGVsLmNvbS9JbnRlbFNHWFJvb3RDQS5kZXIwHQYDVR0OBBYEFH44gtX7VSlK\nQEmORYQD6RSRvfRVMA4GA1UdDwEB/wQEAwIGwDAMBgNVHRMBAf8EAjAAMAoGCCqG\nSM49BAMCA0cAMEQCIB9C8wOAN/ImxDtGACV246KcqjagZOR0kyctyBrsGGJVAiAj\nftbrNGsGU8YH211dRiYNoPPu19Zp/ze8JmhujB0oBw==\n-----END CERTIFICATE-----"))
	root_ca_cert_tdx     = conv([]byte("-----BEGIN CERTIFICATE-----\nMIICjzCCAjSgAwIBAgIUImUM1lqdNInzg7SVUr9QGzknBqwwCgYIKoZIzj0EAwIwaDEaMBgGA1UEAwwRSW50ZWwgU0dYIFJvb3QgQ0ExGjAYBgNVBAoMEUludGVsIENvcnBvcmF0aW9uMRQwEgYDVQQHDAtTYW50YSBDbGFyYTELMAkGA1UECAwCQ0ExCzAJBgNVBAYTAlVTMB4XDTE4MDUyMTEwNDUxMFoXDTQ5MTIzMTIzNTk1OVowaDEaMBgGA1UEAwwRSW50ZWwgU0dYIFJvb3QgQ0ExGjAYBgNVBAoMEUludGVsIENvcnBvcmF0aW9uMRQwEgYDVQQHDAtTYW50YSBDbGFyYTELMAkGA1UECAwCQ0ExCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEC6nEwMDIYZOj/iPWsCzaEKi71OiOSLRFhWGjbnBVJfVnkY4u3IjkDYYL0MxO4mqsyYjlBalTVYxFP2sJBK5zlKOBuzCBuDAfBgNVHSMEGDAWgBQiZQzWWp00ifODtJVSv1AbOScGrDBSBgNVHR8ESzBJMEegRaBDhkFodHRwczovL2NlcnRpZmljYXRlcy50cnVzdGVkc2VydmljZXMuaW50ZWwuY29tL0ludGVsU0dYUm9vdENBLmRlcjAdBgNVHQ4EFgQUImUM1lqdNInzg7SVUr9QGzknBqwwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQEwCgYIKoZIzj0EAwIDSQAwRgIhAOW/5QkR+S9CiSDcNoowLuPRLsWGf/Yi7GSX94BgwTwgAiEA4J0lrHoMs+Xo5o/sX6O9QWxHRAvZUGOdRQ7cvqRXaqI=\n-----END CERTIFICATE-----"))

	// valid test collateral
	tee_type_tdx         = uint32(81)
	tcb_info_tdx         = []byte(`{"tcbInfo":{"id":"TDX","version":3,"issueDate":"2023-11-05T15:18:58Z","nextUpdate":"2023-12-05T15:18:58Z","fmspc":"00806f050000","pceId":"0000","tcbType":0,"tcbEvaluationDataNumber":16,"tdxModule":{"mrsigner":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","attributes":"0000000000000000","attributesMask":"FFFFFFFFFFFFFFFF"},"tdxModuleIdentities":[{"id":"TDX_01","mrsigner":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","attributes":"0000000000000000","attributesMask":"FFFFFFFFFFFFFFFF","tcbLevels":[{"tcb":{"isvsvn":2},"tcbDate":"2023-08-09T00:00:00Z","tcbStatus":"UpToDate"}]}],"tcbLevels":[{"tcb":{"sgxtcbcomponents":[{"svn":6,"category":"BIOS","type":"Early Microcode Update"},{"svn":6,"category":"OS/VMM","type":"SGX Late Microcode Update"},{"svn":2,"category":"OS/VMM","type":"TXT SINIT"},{"svn":2,"category":"BIOS"},{"svn":3,"category":"BIOS"},{"svn":1,"category":"BIOS"},{"svn":0},{"svn":3,"category":"OS/VMM","type":"SEAMLDR ACM"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}],"pcesvn":11,"tdxtcbcomponents":[{"svn":3,"category":"OS/VMM","type":"TDX Module"},{"svn":0,"category":"OS/VMM","type":"TDX Module"},{"svn":6,"category":"OS/VMM","type":"TDX Late Microcode Update"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}]},"tcbDate":"2023-08-09T00:00:00Z","tcbStatus":"UpToDate"},{"tcb":{"sgxtcbcomponents":[{"svn":5,"category":"BIOS","type":"Early Microcode Update"},{"svn":5,"category":"OS/VMM","type":"SGX Late Microcode Update"},{"svn":2,"category":"OS/VMM","type":"TXT SINIT"},{"svn":2,"category":"BIOS"},{"svn":3,"category":"BIOS"},{"svn":1,"category":"BIOS"},{"svn":0},{"svn":3,"category":"OS/VMM","type":"SEAMLDR ACM"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}],"pcesvn":11,"tdxtcbcomponents":[{"svn":3,"category":"OS/VMM","type":"TDX Module"},{"svn":0,"category":"OS/VMM","type":"TDX Module"},{"svn":5,"category":"OS/VMM","type":"TDX Late Microcode Update"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}]},"tcbDate":"2023-02-15T00:00:00Z","tcbStatus":"OutOfDate","advisoryIDs":["INTEL-SA-00837"]},{"tcb":{"sgxtcbcomponents":[{"svn":5,"category":"BIOS","type":"Early Microcode Update"},{"svn":5,"category":"OS/VMM","type":"SGX Late Microcode Update"},{"svn":2,"category":"OS/VMM","type":"TXT SINIT"},{"svn":2,"category":"BIOS"},{"svn":3,"category":"BIOS"},{"svn":1,"category":"BIOS"},{"svn":0},{"svn":3,"category":"OS/VMM","type":"SEAMLDR ACM"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}],"pcesvn":5,"tdxtcbcomponents":[{"svn":3,"category":"OS/VMM","type":"TDX Module"},{"svn":0,"category":"OS/VMM","type":"TDX Module"},{"svn":5,"category":"OS/VMM","type":"TDX Late Microcode Update"},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0},{"svn":0}]},"tcbDate":"2018-01-04T00:00:00Z","tcbStatus":"OutOfDate","advisoryIDs":["INTEL-SA-00106","INTEL-SA-00115","INTEL-SA-00135","INTEL-SA-00203","INTEL-SA-00220","INTEL-SA-00233","INTEL-SA-00270","INTEL-SA-00293","INTEL-SA-00320","INTEL-SA-00329","INTEL-SA-00381","INTEL-SA-00389","INTEL-SA-00477","INTEL-SA-00837"]}]},"signature":"551d46c841ebed44bf34b659009fa1f8ca6a6c5ee3aafb5a0ae59a2c989d761b534e6ec815a42db3af09d5362a3b79e49f6aabe8a1f4e8c6fe3cc7954d7c5b1e"}`)
	tcb_info_tdx_size    = uint32(3574)
	qe_identity_tdx      = []byte(`{"enclaveIdentity":{"id":"TD_QE","version":2,"issueDate":"2023-11-05T15:39:30Z","nextUpdate":"2023-12-05T15:39:30Z","tcbEvaluationDataNumber":16,"miscselect":"00000000","miscselectMask":"FFFFFFFF","attributes":"11000000000000000000000000000000","attributesMask":"FBFFFFFFFFFFFFFF0000000000000000","mrsigner":"DC9E2A7C6F948F17474E34A7FC43ED030F7C1563F1BABDDF6340C82E0E54A8C5","isvprodid":2,"tcbLevels":[{"tcb":{"isvsvn":4},"tcbDate":"2023-08-09T00:00:00Z","tcbStatus":"UpToDate"}]},"signature":"93b578ccf06cbc9119e1ccd5d57575309495f48712a38227c4e1fee46ef9f87dd48576666ea7854da53f233765cb73fe10fafba310948935cdcca06b1e679a72"}`)
	qe_identity_tdx_size = uint32(624)

	validTDXCertChain      = [][]byte{tcb_signing_cert_tdx.Raw, root_ca_cert_tdx.Raw}
	validTDXMeasurement, _ = hex.DecodeString(validMrTd)
	validTDXNonce, _       = hex.DecodeString("324e81d1e3d71e9f77c9e1aafcbdf157aa532d059c3637da19bd28f70e654540b3c711969e303515f916bff5d4b04c7e037a84a0b0bb7ac978a3c0860806c6bb")
	tdxRootCAFingerprint   = "44a0196b2b99f889b8e149e95b807a350e7424964399e885a7cbb8ccfab674d3"

	// valid report body values
	mrOwner           = [48]byte{} // 0x00s
	mrOwnerConfig     = [48]byte{} // 0x00s
	mrConfigId        = [48]byte{} // 0x00s
	rtMr0             = [48]byte{225, 175, 117, 230, 25, 39, 65, 14, 66, 181, 75, 57, 246, 104, 28, 249, 176, 191, 186, 229, 18, 177, 94, 135, 14, 76, 141, 157, 90, 92, 179, 133, 87, 27, 14, 29, 194, 247, 11, 249, 204, 239, 8, 86, 15, 10, 43, 88}
	rtMr1             = [48]byte{1, 28, 185, 253, 213, 20, 180, 71, 150, 2, 57, 206, 119, 160, 255, 200, 7, 135, 119, 55, 31, 126, 191, 235, 76, 160, 72, 13, 3, 60, 229, 236, 97, 67, 72, 6, 73, 247, 90, 144, 87, 157, 245, 245, 1, 107, 231, 202}
	rtMr2             = [48]byte{} // 0x00s
	rtMr3             = [48]byte{} // 0x00s
	validMrSeam       = "2fd279c16164a93dd5bf373d834328d46008c2b693af9ebb865b08b2ced320c9a89b4869a9fab60fbe9d0c5a5363c656"
	validMrTd         = "145fe28dab356d75767ab56ae83bc59ac045dc548bf40a3fb11390446af19f6ee21b0b8874c9a7864cedb64c6573d932"
	validTdAttributes = [8]byte{0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00}
	validXFAM         = [8]byte{0xE7, 0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00}
)

func Test_verifyTdxMeasurements(t *testing.T) {
	type args struct {
		tdxM  *TdxMeasurement
		tdxV  []ReferenceValue
		nonce []byte
	}
	tests := []struct {
		name  string
		args  args
		want  *TdxMeasurementResult
		want1 bool
	}{
		{
			name: "Valid Attestation Report",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  validTDXCertChain,
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: validTDXMeasurement,
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        tcb_info_tdx,
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							TdId: TDId{
								MrOwner:       mrOwner,
								MrOwnerConfig: mrOwnerConfig,
								MrConfigId:    mrConfigId,
								RtMr0:         rtMr0,
								RtMr1:         rtMr1,
								RtMr2:         rtMr2,
								RtMr3:         rtMr3,
							},
							MrSeam:       validMrSeam,
							TdAttributes: validTdAttributes,
							Xfam:         validXFAM,
						},
					},
				},
				nonce: validTDXNonce,
			},
			want1: true,
		},
		{
			name: "Invalid Nonce",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  validTDXCertChain,
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: validTDXMeasurement,
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        tcb_info_tdx,
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							MrSeam:        validMrSeam,
							TdAttributes:  validTdAttributes,
							Xfam:          validXFAM,
						},
					},
				},
				nonce: []byte{0x00},
			},
			want1: false,
		},
		{
			name: "Invalid Certificate Chain",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  [][]byte{},
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: validTDXMeasurement,
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        tcb_info_tdx,
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							TdId: TDId{
								MrOwner:       mrOwner,
								MrOwnerConfig: mrOwnerConfig,
								MrConfigId:    mrConfigId,
								RtMr0:         rtMr0,
								RtMr1:         rtMr1,
								RtMr2:         rtMr2,
								RtMr3:         rtMr3,
							},
							MrSeam:       validMrSeam,
							TdAttributes: validTdAttributes,
							Xfam:         validXFAM,
						},
					},
				},
				nonce: validTDXNonce,
			},
			want1: false,
		},
		{
			name: "Invalid measurement",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  validTDXCertChain,
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: []byte("12345"),
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        tcb_info_tdx,
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							TdId: TDId{
								MrOwner:       mrOwner,
								MrOwnerConfig: mrOwnerConfig,
								MrConfigId:    mrConfigId,
								RtMr0:         rtMr0,
								RtMr1:         rtMr1,
								RtMr2:         rtMr2,
								RtMr3:         rtMr3,
							},
							MrSeam:       validMrSeam,
							TdAttributes: validTdAttributes,
							Xfam:         validXFAM,
						},
					},
				},
				nonce: validTDXNonce,
			},
			want1: false,
		},
		{
			name: "Invalid Attributes",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  validTDXCertChain,
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: validTDXMeasurement,
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        tcb_info_tdx,
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							TdId: TDId{
								MrOwner:       mrOwner,
								MrOwnerConfig: mrOwnerConfig,
								MrConfigId:    mrConfigId,
								RtMr0:         rtMr0,
								RtMr1:         rtMr1,
								RtMr2:         rtMr2,
								RtMr3:         rtMr3,
							},
							MrSeam:       validMrSeam,
							TdAttributes: [8]byte{},
							Xfam:         validXFAM,
						},
					},
				},
				nonce: validTDXNonce,
			},
			want1: false,
		},
		{
			name: "Invalid TcbInfo Report",
			args: args{
				tdxM: &TdxMeasurement{
					Type:   "TDX Measurement",
					Report: aisecTDXQuote,
					Certs:  validTDXCertChain,
				},
				tdxV: []ReferenceValue{
					{
						Type:   "TDX Reference Value",
						Sha256: validTDXMeasurement,
						Tdx: &TDXDetails{
							Version: 0x04,
							Collateral: IntelCollateral{
								TeeType:        tee_type_tdx,
								TcbInfo:        []byte{},
								TcbInfoSize:    tcb_info_tdx_size,
								QeIdentity:     qe_identity_tdx,
								QeIdentitySize: qe_identity_tdx_size,
							},
							CaFingerprint: tdxRootCAFingerprint,
							TdId: TDId{
								MrOwner:       mrOwner,
								MrOwnerConfig: mrOwnerConfig,
								MrConfigId:    mrConfigId,
								RtMr0:         rtMr0,
								RtMr1:         rtMr1,
								RtMr2:         rtMr2,
								RtMr3:         rtMr3,
							},
							MrSeam:       validMrSeam,
							TdAttributes: validTdAttributes,
							Xfam:         validXFAM,
						},
					},
				},
				nonce: validTDXNonce,
			},
			want1: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			res, got := verifyTdxMeasurements(tt.args.tdxM, tt.args.nonce, tt.args.tdxV)
			if got != tt.want1 {
				t.Errorf("verifyTdxMeasurements() got = %v, want %v", got, tt.want1)
			}
			if !got {
				fmt.Println(res)
			}
		})
	}

}
